// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "cart_types.h"
#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fastTree
void fastTree(arma::mat data, int code);
RcppExport SEXP _cart_fastTree(SEXP dataSEXP, SEXP codeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type code(codeSEXP);
    fastTree(data, code);
    return R_NilValue;
END_RCPP
}
// testPartitionMap
arma::mat testPartitionMap(arma::mat data, int code);
RcppExport SEXP _cart_testPartitionMap(SEXP dataSEXP, SEXP codeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type code(codeSEXP);
    rcpp_result_gen = Rcpp::wrap(testPartitionMap(data, code));
    return rcpp_result_gen;
END_RCPP
}
// test
arma::mat test(arma::mat data, int code);
RcppExport SEXP _cart_test(SEXP dataSEXP, SEXP codeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type code(codeSEXP);
    rcpp_result_gen = Rcpp::wrap(test(data, code));
    return rcpp_result_gen;
END_RCPP
}
// sortOnFeatureSub
arma::uvec sortOnFeatureSub(arma::mat data, arma::uvec rowvec, u_int d);
RcppExport SEXP _cart_sortOnFeatureSub(SEXP dataSEXP, SEXP rowvecSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type rowvec(rowvecSEXP);
    Rcpp::traits::input_parameter< u_int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(sortOnFeatureSub(data, rowvec, d));
    return rcpp_result_gen;
END_RCPP
}
// sortOnFeature
arma::uvec sortOnFeature(arma::mat data, u_int d);
RcppExport SEXP _cart_sortOnFeature(SEXP dataSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< u_int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(sortOnFeature(data, d));
    return rcpp_result_gen;
END_RCPP
}
// sortDataOnFeature
arma::mat sortDataOnFeature(arma::mat data, u_int d);
RcppExport SEXP _cart_sortDataOnFeature(SEXP dataSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< u_int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(sortDataOnFeature(data, d));
    return rcpp_result_gen;
END_RCPP
}
// timeTree
void timeTree(arma::mat data, int code);
RcppExport SEXP _cart_timeTree(SEXP dataSEXP, SEXP codeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type code(codeSEXP);
    timeTree(data, code);
    return R_NilValue;
END_RCPP
}
// testBuildTree
arma::uvec testBuildTree(arma::mat z, arma::uvec rows);
RcppExport SEXP _cart_testBuildTree(SEXP zSEXP, SEXP rowsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type rows(rowsSEXP);
    rcpp_result_gen = Rcpp::wrap(testBuildTree(z, rows));
    return rcpp_result_gen;
END_RCPP
}
// sse
double sse(arma::vec x, int n, double xbar);
RcppExport SEXP _cart_sse(SEXP xSEXP, SEXP nSEXP, SEXP xbarSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type xbar(xbarSEXP);
    rcpp_result_gen = Rcpp::wrap(sse(x, n, xbar));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cart_fastTree", (DL_FUNC) &_cart_fastTree, 2},
    {"_cart_testPartitionMap", (DL_FUNC) &_cart_testPartitionMap, 2},
    {"_cart_test", (DL_FUNC) &_cart_test, 2},
    {"_cart_sortOnFeatureSub", (DL_FUNC) &_cart_sortOnFeatureSub, 3},
    {"_cart_sortOnFeature", (DL_FUNC) &_cart_sortOnFeature, 2},
    {"_cart_sortDataOnFeature", (DL_FUNC) &_cart_sortDataOnFeature, 2},
    {"_cart_timeTree", (DL_FUNC) &_cart_timeTree, 2},
    {"_cart_testBuildTree", (DL_FUNC) &_cart_testBuildTree, 2},
    {"_cart_sse", (DL_FUNC) &_cart_sse, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_cart(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
