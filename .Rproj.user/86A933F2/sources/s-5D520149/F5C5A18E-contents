#ifndef NODE_H
#define NODE_H

#include <RcppArmadillo.h>

double calculateLeaf(arma::mat data, arma::u_vec rows);


class Node {
    
    private:
        Node* left   = nullptr; // left child
        Node* right  = nullptr; // right child
        
        double        threshold; // value used to determine left/right split
        double        sse;       // sum of squared error associated with split
        double        leafVal;   // value for leaf, if is leaf
        unsigned int  column;    // column of the splitting variable

        arma::mat     data;
        arma::uvec   rows;
        
    public:
        bool  isLeaf = false;   // indicator for leaf nodes
        
        // constructor for Node
        Node(double threshold, unsigned int column, arma::mat data, 
            arma::uvec rows) {
                this->threshold = threshold;
                this->column    = column;
                this->data      = data;
                this->rows      = rows;
        }
        // constructor for leaf
        Node(arma::mat data, arma::uvec rows) {
            this->data = data;
            this->rows = rows;
            this->leafVal = calculateLeaf(data, rows); 
        }
        // compute the value of the leaf node
        double calculateLeaf(arma::mat data, arma::uvec rows) {
            return 0;
        }

}; // end Node class

#endif